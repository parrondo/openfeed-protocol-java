<!-- Copyright (C) 2011-2013 Barchart, Inc. <http://www.barchart.com/> All 
	rights reserved. Licensed under the OSI BSD License. http://www.opensource.org/licenses/bsd-license.php -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openfeed.base</groupId>
		<artifactId>openfeed-archon</artifactId>
		<version>1.0.0</version>
		<relativePath />
	</parent>

	<groupId>org.openfeed.proto</groupId>
	<artifactId>openfeed-protocol-archon</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>
<![CDATA[

### OpenFeed parent project for protocol modules.

OpenFeed is open standard for market data delivery.

]]>
	</description>

	<scm>
		<url>https://github.com/openfeed-project/openfeed-protocol-java</url>
		<connection>scm:git:git://github.com/openfeed-project/openfeed-protocol-java.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/openfeed-project/openfeed-protocol-java.git</developerConnection>
		<tag>master</tag>
	</scm>

	<properties>

		<!-- Protocol templates version. -->
		<projectTemplateVersion>1.0.0-SNAPSHOT</projectTemplateVersion>

	</properties>

	<dependencies>

		<!-- Protocol buffers. -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>[2.5,3)</version>
			<scope>provided</scope>
		</dependency>

		<!-- OpenFeed protocol buffers templates. -->
		<dependency>
			<groupId>org.openfeed.proto</groupId>
			<artifactId>openfeed-protocol</artifactId>
			<version>${projectTemplateVersion}</version>
			<classifier>template</classifier>
			<type>zip</type>
			<scope>provided</scope>
		</dependency>

		<!-- Logging library. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>

			<plugins>

				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<!-- Unpack templates from maven only. -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<!-- Process templates from maven only. -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.igor-petruk.protobuf</groupId>
										<artifactId>protobuf-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<!-- Include test source. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Include test archive. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<!-- Process template files. -->
		<profile>
			<id>process-template</id>
			<activation>
				<file>
					<exists>process-template.md</exists>
				</file>
			</activation>
			<properties>

				<!-- Location of all extracted templates. -->
				<templateRootFolder>${basedir}/target/template</templateRootFolder>

				<!-- Template module name, must be provided by each module. -->
				<templateModuleName>unknown</templateModuleName>

				<!-- Location of module extracted templates. -->
				<templateModuleFolder>${templateRootFolder}/${templateModuleName}</templateModuleFolder>

				<!-- Location of generated main/java code. -->
				<templateMainJavaFolder>${basedir}/target/java/main</templateMainJavaFolder>

				<!-- Location of generated test/java code. -->
				<templateTestJavaFolder>${basedir}/target/java/test</templateTestJavaFolder>

			</properties>
			<build>
				<plugins>

					<!-- Extract all protocol templates. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.openfeed.proto</groupId>
											<artifactId>openfeed-protocol</artifactId>
											<version>${projectTemplateVersion}</version>
											<classifier>template</classifier>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
									<overWriteIfNewer>true</overWriteIfNewer>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<outputDirectory>${templateRootFolder}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Generate java source from *.proto files. -->
					<plugin>
						<groupId>com.github.igor-petruk.protobuf</groupId>
						<artifactId>protobuf-maven-plugin</artifactId>
						<version>0.6.3</version>
						<executions>
							<!-- Generate main sources. -->
							<execution>
								<id>protocol-main-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<addSources>none</addSources>
									<ignoreVersions>false</ignoreVersions>
									<includeDirectories>
										<entry>${templateModuleFolder}</entry>
										<entry>${basedir}/src/main/resources</entry>
									</includeDirectories>
									<inputDirectories>
										<entry>${templateModuleFolder}</entry>
										<entry>${basedir}/src/main/resources</entry>
									</inputDirectories>
									<outputDirectory>${templateMainJavaFolder}</outputDirectory>
								</configuration>
							</execution>
							<!-- Generate test sources. -->
							<execution>
								<id>protocol-test-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<addSources>none</addSources>
									<ignoreVersions>false</ignoreVersions>
									<inputDirectories>
										<entry>${basedir}/src/test/resources</entry>
									</inputDirectories>
									<outputDirectory>${templateTestJavaFolder}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Make generated resources available for the build. -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<!-- Add protocol template folders. -->
							<execution>
								<id>protocol-template</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-resource</goal>
								</goals>
								<configuration>
									<resources>
										<resource>
											<directory>${templateModuleFolder}</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
							<!-- Add generated main java folders. -->
							<execution>
								<id>protocol-main-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${templateMainJavaFolder}</source>
									</sources>
								</configuration>
							</execution>
							<!-- Add generated test java folders. -->
							<execution>
								<id>protocol-test-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${templateTestJavaFolder}</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>
